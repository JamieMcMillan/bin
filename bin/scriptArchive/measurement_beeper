#!/bin/bash
#------------------------------------------
#            Measurement Beeper
#------------------------------------------
#
#       Plays a beeping noise every
#       $DURATION seconds, $POINTS times.
#
#       Takes options such as:
#
#          measurement_beeper -p 12 -d 10
#
#------------------------------------------

beeper() {

# Check for positive arguments to the options
if (( $POINTS >= 0 )) && (( $DURATION >= 0 ))
then

	# Beep for each $POINTS
	for (( i=1; i<=($POINTS); i++ ))
	do

		# Play the sound file .beep.m4a
		# and pipe output to /dev/null
		# then and pause for $DURATION
#		printf "\a\r" & sleep $DURATION
		say "b" & sleep $DURATION
	done

	# Play a final beep with no pause after
#	printf "\a\r"
	say "b"
	exit 0
else
	printf "Enter positive values for -p and -d.\n"
	exit 0
fi

}

#Set Script Name variable
SCRIPT=$(basename "${BASH_SOURCE[0]}")

#Initialize variables to default values.
OPT_P=0
OPT_D=1

#Set fonts for Help.
NORM=$(tput sgr0)
BOLD=$(tput bold)
REV=$(tput smso)

#Help function
function HELP {
  echo -e \\n"Help documentation for ${BOLD}${SCRIPT}.${NORM}"\\n
  echo -e "${REV}Basic usage:${NORM} ${BOLD}$SCRIPT ${NORM}"\\n
  echo -e "Heralds a single beep upon operation."
  echo -e "Then ${BOLD}p${NORM} successive beeps every ${BOLD}d${NORM} seconds."\\n
  echo "Command line switches are optional. The following switches are recognized."
  echo "${REV}-p${NORM}  --Sets the value for measurement Points ${BOLD}p${NORM}. Default is ${BOLD}0${NORM}."
  echo "${REV}-d${NORM}  --Sets the value for Duration ${BOLD}d${NORM} between beeps. Default is ${BOLD}0${NORM}."
  echo -e "${REV}-h${NORM}  --Displays this help message. No further functions are performed."\\n
  echo -e "Example: ${BOLD}$SCRIPT -p 12 -d 10 ${NORM}"\\n
  exit 1
}

# Start getopts code

# Set default values to options
OPT_P=0
OPT_D=1

#Parse command line flags
#If an option should be followed by an argument, it should be followed by a ":".
#Notice there is no ":" after "h". The leading ":" suppresses error messages from
#getopts. This is required to get my unrecognized option code to work.

while getopts :p:d:h FLAG; do
  case $FLAG in
    p)  #set option "p"
      OPT_P=$OPTARG
      ;;
    d) #set option "d"
      OPT_D=$OPTARG
      ;;
    h)  #show help
      HELP
      ;;
    \?) #unrecognized option - show help
      echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
      HELP
      ;;
  esac
done

#This tells getopts to move on to the next argument.
shift $((OPTIND-1))

# End getopts code

# Execute function
POINTS=$OPT_P
DURATION=$OPT_D
beeper
