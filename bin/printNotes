#!/bin/bash
#----------------------------------------------------------
#	Print Notes File
#----------------------------------------------------------
#	
#	For the single argument file provided, print to pdf.
#	
#	Functionality is limited to the printing of .txt and
#	.md files. This is controlled through a case structure.
#	
#	Version 1.0
#	JM	28/04/2023
#	
#----------------------------------------------------------
#	Future features:
#		- Extend functionality to new extension types
#
#		
#----------------------------------------------------------
#	Changelog:
#
#
#----------------------------------------------------------

shopt -s extglob
#----------------------------------
# Generate a unique job identifier
#----------------------------------

SCRIPT=$(basename ${BASH_SOURCE[0]})
UNIQUE="0"
job=$(printf "${SCRIPT}_${RANDOM}")
while [ "$UNIQUE" -ne "1" ]
do
        if [[ ! -f /tmp/$job ]]
        then
                UNIQUE="1"
        else
                (>&2 echo "${SCRIPT} warning: creating new identifier")
                job=$(printf "${SCRIPT}_${RANDOM}")
        fi
done


#--------------------------
# Check necessary installs
#--------------------------

# Update this
# fold gs a2ps pandoc
if [ "$(which fold)" == "" ]
then
	printf "${SCRIPT} error: fold has not been installed\n"
	exit 1
elif [ "$(which gs)" == "" ]
then
	printf "${SCRIPT} error: gs has not been installed\n"
	exit 1
elif [ "$(which a2ps)" == "" ]
then
	printf "${SCRIPT} error: a2ps has not been installed\n"
	exit 1
elif [ "$(which pandoc)" == "" ]
then
	printf "${SCRIPT} error: pandoc has not been installed\n"
	exit 1
fi


#------------------
# Command: Identify Extension
#------------------
identifyExtension()
{
  fileName="$(ls "${inputFile}" |  sed 's/.*\/\(.*\)$/\1/')"
  extension=$(echo "${inputFile}" | sed -nE 's/.*\.([[:alnum:]]{1,4})$/\1/p')

  case ${extension} in
	md)
	  printMarkdown
	  ;;
	txt)
	  printText
	  ;;
	*)
	  printf "${SCRIPT} error: extension not recognised\n"
	  exit 1
	  ;;
  esac
}


#------------------
# Command: Print Text
#------------------
printText()
{
	fold -w 120 -s "${inputFile}" 				\
    	| a2ps -1 -T 4							\
			--header="${fileName%.txt}" 		\
			--footer="" 						\
			--stdin="${fileName%.txt}" 			\
			--center-title="${fileName%.txt}" 	\
			-f 11 								\
			--margin=10 						\
			-o "${inputFile%.txt}.ps"

	gs 										\
	  -sOutputFile="${inputFile%.txt}.pdf" 	\
	  -q 									\
	  -dNOPAUSE 							\
	  -sDEVICE=pdfwrite 					\
	  -dEPSCrop 							\
	  -sPAPERSIZE=a4 						\
	  -f "${inputFile%.txt}.ps" 			\
	  -c quit

	rm "${inputFile%.txt}.ps"
}


#------------------
# Command: Print Markdown
#------------------
printMarkdown()
{

  eisvogelTemplate="${HOME}/.local/share/pandoc/templates/eisvogel.latex"
  if [ -f "${eisvogelTemplate}" ]
  then
	templateCommand="--template eisvogel"
  fi

  pandoc "${inputFile}" 		\
	-o "${inputFile%.md}".pdf 	\
	--from markdown 			\
	--listings					\
	${templateCommand}
}


#------------------
# main
#------------------

inputFile="$1"
identifyExtension "$inputFile"

exit 0
